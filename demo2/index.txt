学习 typescript 基础语法

typescript 由模块、函数、变量、语句和表达式、注释几个部分组成

tsc 常用编译参数：
--help  显示帮助信息
--module  载入扩展模块
--target 设置ECMA版本
--declaration  额外生成一个.d.ts扩展名的文件
--removeComments  删除文件的注释
--out  编译多个文件并合并到一个输出文件
--sourcemap 生成一个sourcemap（.map）文件，sourcemap是一个存储源代码与编译代码对应位置映射的信息文件
--module nolmplicitAny  在表达式和声明上有隐含的any类型时报错
--watch   在监视模式下运行编译器，会监视输出文件，在他们改变时重新编译


typescript 会忽略程序中出现的空格、制表符和换行符
空格、制表符通常用来缩进代码，是代码易于阅读和理解

typescript 区分大小写和小写字符

每行指令都是一段语句，你可以使用分号或不使用，分号在typescript中是可选的，建议使用
如果语句写在同一行则一定需要使用分号来分隔，否则会报错

注释是一个良好的习惯，虽然很多程序员讨厌注释，但还是建议你在每段代码写上文字说明
注释可以提高程序的可读性
注释可以包含有关程序一些信息
编译器会忽略注释

typescript支持两种注释
单行注释 （//） 
多行注释 （/* */）


typescript与面向对象

面向对象是一种对现实世界理解和抽象的方法
typescript是一种面向对象的编程语言
面向对象主要有两个概念：对象和类
对象：对象是类的一个实例
类：类是一个模板，它描述一类对象的行为和状态
方法：方法是类的操作的实现步骤

typescript 面向对象编程实例

class Site {
  name():void {
    console.log("Runoob")
  }
}

var obj = new Site();
obj.name();


编译后生成的javascript如下：
var Site = (function() {
  function Site() {
  }
  Site.prototype.name = function () {
    console.log("Runoob");
  };
  return Site;
}());

var obj = new Site();
obj.name()