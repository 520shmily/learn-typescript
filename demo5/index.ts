// typescript 类
// typescript 是面向对象的javascript
// 类描述了所创建的对象共同的属性和方法
// typescript 支持面向对象的所有特征， 比如类， 接口等
// typescript 类定义方式如下
class class_name {
  // 类作用域
}

// 定义类的关键字为 class， 后面紧跟类名， 类可以包含以下几个模块（类的数据成员）
// 字段  字段是类里面声明的变量，字段表示对象的有关数据
// 构造函数  类实例化时调用，可以为类的对象分配内存
// 方法  方法为对象要执行的操作

// 使用 new 关键字来实例化类的对象

// 类中的字段属性和方法可以使用 . 号来访问

// 类的继承
// typescript 支持继承类，即我们可以在创建类的时候继承一个已经存在的类，这个已经存在的类
// 称为父类，继承它的类称为子类
// 类继承使用关键字 extends ，子类除了不能继承父类的私有成员（方法和属性）
// 和构造函数，其他的都可以继承
// typescript 一次只能继承一个类，不支持继承多个类，但typescript支持
// 多重继承
// 语法格式如下：
class child_class_name extends parent_class_name

// 继承类的方法重写
// 类继承后，子类可以对父类的方法重新定义，这个过程称之为方法的重写
// 其中 super 关键字是对父类的直接引用，该关键字可以引用父类的属性和方法

// static 关键字
// static 关键字用于定义类的数据成员（属性和方法）为静态的，静态成员可以直接通过类名调用


// 访问控制修饰符
// typescript 中可以使用访问控制符来保护对类、变量、方法和构造方法的访问。
// typescript 支持3种不同的访问权限
// public（默认）   公有，可以在任何地方被访问
// protected（受保护）  可以被其自身以及其子类和父类访问
// private（私有）   只能被其定义所在的类访问

// 类和接口
// 类可以实现接口 使用关键字 implements， 并将 interest 字段作为类的属性使用